version: "3.8"
services:
  bnpl-api:
    image: mojtabaarvin/bnpl-backend:dev-latest
    container_name: bnpl-api
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=bnpl.settings.development
      - DJANGO_ENV=development
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    tty: true
    stdin_open: true
    command: ["sh"]
    volumes:
      - ./backend:/app:delegated
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    ports:
      - "8000:8000"
    depends_on:
      bnpl-db:
        condition: service_healthy
      bnpl-redis:
        condition: service_started
    networks:
      - bnpl-network

  bnpl-redis:
    image: redis:7-alpine
    container_name: bnpl-redis
    env_file:
      - .env
    command: [
      "redis-server",
      "--requirepass", "${REDIS_PASSWORD}",
      "--appendonly", "yes",
      "--appendfilename", "appendonly.aof"
    ]
    volumes:
      - bnpl-redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - bnpl-network

  bnpl-db:
    image: postgres:15
    container_name: bnpl-db
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - bnpl-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bnpl-network

  bnpl-worker:
   image: mojtabaarvin/bnpl-backend:dev-latest
   container_name: bnpl-worker
   env_file:
     - .env
   environment:
     - DJANGO_SETTINGS_MODULE=bnpl.settings.development
     - DJANGO_ENV=development
   user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
   volumes:
     - ./backend:/app:delegated
   depends_on:
     - bnpl-api
     - bnpl-redis
   command: ["celery", "-A", "bnpl", "worker", "--loglevel=info"]
   networks:
       - bnpl-network

  bnpl-beat:
   image: mojtabaarvin/bnpl-backend:dev-latest
   container_name: bnpl-beat
   env_file:
     - .env
   environment:
     - DJANGO_SETTINGS_MODULE=bnpl.settings.development
     - DJANGO_ENV=development
   user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
   volumes:
     - ./backend:/app:delegated
   depends_on:
     - bnpl-api
     - bnpl-redis
   command: >
     celery -A bnpl beat
       --loglevel=INFO
       --scheduler django_celery_beat.schedulers:DatabaseScheduler
   networks:
     - bnpl-network

  # bnpl-frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: bnpl-frontend
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./frontend:/app
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - bnpl-network

  # bnpl-nginx:
  #   image: nginx:alpine
  #   container_name: bnpl-nginx
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - bnpl-api
  #     - bnpl-frontend
  #   networks:
  #     - bnpl-network

  bnpl-tests:
     image: mojtabaarvin/bnpl-backend:dev-latest
     container_name: bnpl-tests
     env_file:
       - .env
     environment:
       - DJANGO_SETTINGS_MODULE=bnpl.settings.development
       - DJANGO_ENV=development
     command: >
        mkdir -p /app/test_artifacts && \
        pytest --junitxml=/app/test_artifacts/junit-report-local.xml \
        --cov=./ --cov-report=xml:/app/test_artifacts/coverage-report.xml \
        -r a --capture=no \
        | tee /app/test_artifacts/test-execution.log
     restart: "no"
     volumes:
       - ./backend:/app
     depends_on:
       - bnpl-db
       - bnpl-redis
     networks:
       - bnpl-network

volumes:
  bnpl-db-data:
  bnpl-redis-data:

networks:
  bnpl-network:
    driver: bridge
