{
  "name": "bnpl-frontend",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "shared",
    "shell",
    "customer-app",
    "merchant-app"
  ],
  "scripts": {
    "prepare": "pnpm --filter @bnpl/shared build",
    "dev": "pnpm --parallel --filter @bnpl/shared --filter shell --filter @bnpl/customer-app --filter @bnpl/merchant-app dev",
    "build": "pnpm --filter @bnpl/shared build && pnpm --parallel --filter shell --filter @bnpl/customer-app --filter @bnpl/merchant-app build",
    "test": "pnpm --parallel --filter @bnpl/shared --filter shell --filter @bnpl/customer-app --filter @bnpl/merchant-app test",
    "lint": "pnpm exec eslint ."
  },
  "packageManager": "pnpm@10.11.1+sha512.e519b9f7639869dc8d5c3c5dfef73b3f091094b0a006d7317353c72b124e80e1afd429732e28705ad6bfa1ee879c1fce46c128ccebd3192101f43dd67c667912",
  "dependencies": {
    "@mui/icons-material": "^7.1.1",
    "@mui/material": "^7.1.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.202.0",
    "@opentelemetry/instrumentation": "^0.202.0",
    "@opentelemetry/instrumentation-document-load": "^0.47.0",
    "@opentelemetry/instrumentation-fetch": "^0.202.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@opentelemetry/sdk-trace-web": "^2.0.1",
    "@opentelemetry/semantic-conventions": "^1.34.0",
    "@tanstack/react-query": "^5.80.7",
    "axios": "^1.9.0",
    "jwt-decode": "^4.0.0",
    "react": "^19.1.0",
    "react-admin": "^5.8.3",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.6.2"
  },
  "devDependencies": {
    "@module-federation/typescript": "^3.1.3",
    "@opentelemetry/instrumentation-xml-http-request": "^0.202.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@types/jest": "^29.5.14",
    "@types/lodash": "^4.17.17",
    "@types/react": "^19.1.6",
    "@types/react-dom": "^19.1.5",
    "@types/react-router-dom": "^5.3.3",
    "@typescript-eslint/eslint-plugin": "^8.34.0",
    "@typescript-eslint/parser": "^8.34.0",
    "axios-mock-adapter": "^2.1.0",
    "eslint": "^9.28.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "html-webpack-plugin": "^5.6.3",
    "jest": "^30.0.0",
    "jest-environment-jsdom": "^30.0.0",
    "lodash": "^4.17.21",
    "ts-jest": "^29.3.4",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.3",
    "util": "^0.12.5",
    "webpack": "^5.99.9",
    "webpack-cli": "^6.0.1",
    "webpack-dev-server": "^5.2.1"
  },
  "dependenciesDocumentation": {
    "html-webpack-plugin": "webpack requires HtmlWebpackPlugin to set index.html template path",
    "ts-loader": "webpack requires ts-loader to compile tsx files",
    "@module-federation/typescript": "Webpack requires ModuleFederationPlugin to dynamically provide/consume modules at runtime.",
    "axios": "@module-federation/typescript requires axios",
    "@tanstack/react-query": "react-admin Login requires QueryClientProvider",
    "react-router-dom": "react-admin Login used useNavigate hook and requires BrowserRouter wrapper",
    "@testing-library/react": "DOM Testing Library",
    "@testing-library/jest-dom": "provides custom DOM element matchers (e.g., .toHaveAttribute)",
    "jest-environment-jsdom": "jest config needs testEnvironment to support DOM",
    "util": "polyfills (e.g., TextEncoder which is part of the Web API, is not available in the Node.js)",
    "lodash": "to safely access nested properties in tests",
    "@opentelemetry/sdk-trace-web": "deprecated package @opentelemetry/web@0.24.0 is renamed to @opentelemetry/sdk-trace-web",
    "@opentelemetry/api": "core OpenTelemetry API surface for creating and managing spans, context, and propagation",
    "@opentelemetry/exporter-trace-otlp-http": "OTLP-over-HTTP exporter to send spans to your OTEL collector in production (production-only)",
    "@opentelemetry/instrumentation": "base framework for registering auto-instrumentations (fetch, XHR, document load)",
    "@opentelemetry/instrumentation-document-load": "automatically creates spans for browser document load events (DOMContentLoaded, load)",
    "@opentelemetry/instrumentation-fetch": "automatically creates spans for all fetch() calls",
    "@opentelemetry/resources": "helpers for building resource metadata (service name, version, host info)",
    "@opentelemetry/sdk-trace-base": "core SDK implementation of SpanProcessor, Sampler, and basic exporters (used by config)",
    "@opentelemetry/semantic-conventions": "standardized attribute keys (e.g. ATTR_SERVICE_NAME) for resource & span metadata"
  }
}